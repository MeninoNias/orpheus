# Generated by Django 5.1.6 on 2025-02-14 20:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('downloader', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('bio', models.TextField(blank=True, verbose_name='Biografia')),
                ('profile_picture', models.URLField(blank=True, verbose_name='Foto do Perfil')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owner', to=settings.AUTH_USER_MODEL)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='downloader.platform', verbose_name='Plataforma')),
            ],
            options={
                'verbose_name': 'Artista',
                'verbose_name_plural': 'Artistas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owner', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Playlist',
                'verbose_name_plural': 'Playlists',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('url', models.URLField(verbose_name='URL')),
                ('duration', models.IntegerField(help_text='Duração da faixa em segundos', verbose_name='Duração em segundos')),
                ('audio_file', models.FileField(help_text='Arquivo de áudio processado', upload_to='tracks/', verbose_name='Arquivo de áudio')),
                ('source_type', models.CharField(choices=[('URL', 'Online'), ('FILE', 'Local')], default='URL', max_length=10, verbose_name='Tipo de origem')),
                ('file', models.FileField(blank=True, help_text='Arquivo local para upload direto', upload_to='uploads/', verbose_name='Arquivo local')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='playlists.artist', verbose_name='Artista')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owner', to=settings.AUTH_USER_MODEL)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='downloader.platform', verbose_name='Plataforma')),
            ],
            options={
                'verbose_name': 'Faixa',
                'verbose_name_plural': 'Faixas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.PositiveIntegerField(default=0, help_text='Ordem da faixa na playlist', verbose_name='Posição')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_owner', to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_tracks', to='playlists.playlist', verbose_name='Playlist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist_tracks', to='playlists.track', verbose_name='Faixa')),
            ],
            options={
                'verbose_name': 'Faixa da Playlist',
                'verbose_name_plural': 'Faixas da Playlist',
                'ordering': ['playlist', 'position'],
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(related_name='playlists', through='playlists.PlaylistTrack', to='playlists.track', verbose_name='Faixas'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['title', 'artist'], name='playlists_t_title_c3b234_idx'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['platform', 'url'], name='playlists_t_platfor_7f6082_idx'),
        ),
        migrations.AddIndex(
            model_name='playlisttrack',
            index=models.Index(fields=['playlist', 'position'], name='playlists_p_playlis_7565e9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playlisttrack',
            unique_together={('playlist', 'position')},
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['name', 'user'], name='playlists_p_name_30efa3_idx'),
        ),
    ]
